//
// Leveraging code generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class SalesDataRestClientHelperUS {

    /*public static void consumeObject(JSONParser parser) {
        Integer depth = 0;
        do {
            JSONToken curr = parser.getCurrentToken();
            if (curr == JSONToken.START_OBJECT || 
                curr == JSONToken.START_ARRAY) {
                depth++;
            } else if (curr == JSONToken.END_OBJECT ||
                curr == JSONToken.END_ARRAY) {
                depth--;
            }
        } while (depth > 0 && parser.nextToken() != null);
    }*/

    public class Account {
        public String masterId {get;set;} 
        //public String srcBusinessKey {get;set;} 
        public String erpBusinessKey {get;set;} 
        public String crmTechnicalKey {get;set;} 
        public String businessName {get;set;} 
        public String accountType {get;set;} 
        //public String accountParentUri {get;set;} 
        public String currencyIsoCode {get;set;} 

        public Account(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'masterId') {
                            masterId = parser.getText();
                        } /*else if (text == 'srcBusinessKey') {
                            srcBusinessKey = parser.getText();
                        }*/ else if (text == 'erpBusinessKey') {
                            erpBusinessKey = parser.getText();
                        } else if (text == 'crmTechnicalKey') {
                            crmTechnicalKey = parser.getText();
                        } else if (text == 'businessName') {
                            businessName = parser.getText();
                        } else if (text == 'accountType') {
                            accountType = parser.getText();
                        } /*else if (text == 'accountParentUri') {
                            accountParentUri = parser.getText();
                        }*/ else if (text == 'currencyIsoCode') {
                            currencyIsoCode = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Account consuming unrecognized property: '+text);
                            //consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class SalesRecords {
        public Integer period {get;set;} 
        public String accountingPeriod {get;set;} 
        public Integer currentSales {get;set;} 
        public Integer currentUnits {get;set;} 
        public Integer previousSales {get;set;} 
        public Integer previousUnits {get;set;} 
        public Integer diffSales {get;set;} 
        public Integer diffUnits {get;set;} 
        public Integer percDiffSales {get;set;} 
        public Integer percDiffUnits {get;set;} 

        public SalesRecords(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'period') {
                            period = parser.getIntegerValue();
                        } else if (text == 'accountingPeriod') {
                            accountingPeriod = parser.getText();
                        } else if (text == 'currentSales') {
                            currentSales = parser.getIntegerValue();
                        } else if (text == 'currentUnits') {
                            currentUnits = parser.getIntegerValue();
                        } else if (text == 'previousSales') {
                            previousSales = parser.getIntegerValue();
                        } else if (text == 'previousUnits') {
                            previousUnits = parser.getIntegerValue();
                        } else if (text == 'diffSales') {
                            diffSales = parser.getIntegerValue();
                        } else if (text == 'diffUnits') {
                            diffUnits = parser.getIntegerValue();
                        } else if (text == 'percDiffSales') {
                            percDiffSales = parser.getIntegerValue();
                        } else if (text == 'percDiffUnits') {
                            percDiffUnits = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'SalesRecords consuming unrecognized property: '+text);
                            //consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class TotalSalesRecord {
        public Integer currentYearSalesTotal {get;set;} 
        public Integer previousYearSalesTotal {get;set;} 
        public Integer diffSalesTotal {get;set;} 
        public Integer percDiffSalesTotal {get;set;} 
        public Integer currentYearUnitTotal {get;set;} 
        public Integer previousYearUnitTotal {get;set;} 

        public TotalSalesRecord(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'currentYearSalesTotal') {
                            currentYearSalesTotal = parser.getIntegerValue();
                        } else if (text == 'previousYearSalesTotal') {
                            previousYearSalesTotal = parser.getIntegerValue();
                        } else if (text == 'diffSalesTotal') {
                            diffSalesTotal = parser.getIntegerValue();
                        } else if (text == 'percDiffSalesTotal') {
                            percDiffSalesTotal = parser.getIntegerValue();
                        } else if (text == 'currentYearUnitTotal') {
                            currentYearUnitTotal = parser.getIntegerValue();
                        } else if (text == 'previousYearUnitTotal') {
                            previousYearUnitTotal = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'TotalSalesRecord consuming unrecognized property: '+text);
                            //consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public List<SalesItems> salesItems {get;set;} 

    public SalesDataRestClientHelperUS(JSONParser parser) {
        while (parser.nextToken() != JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != JSONToken.VALUE_NULL) {
                    if (text == 'salesItems') {
                        salesItems = new List<SalesItems>();
                        while (parser.nextToken() != JSONToken.END_ARRAY) {
                            salesItems.add(new SalesItems(parser));
                        }
                    } else {
                        System.debug(LoggingLevel.WARN, 'Root consuming unrecognized property: '+text);
                        //consumeObject(parser);
                    }
                }
            }
        }
    }
    
    public class Product {
        //public String masterId {get;set;} 
        //public String srcBusinessKey {get;set;} 
        public String erpBusinessKey {get;set;} 
        public String crmTechnicalKey {get;set;} 
        public String productName {get;set;} 
        public String productType {get;set;} 
        //public String productNameAndReportUri {get;set;} 
        //public String productSalesReportUri {get;set;} 
        public String species {get;set;}
        public List<ProductHierarchies> productHierarchies {get;set;} 

        public Product(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        /*if (text == 'masterId') {
                            masterId = parser.getText();
                        } else if (text == 'srcBusinessKey') {
                            srcBusinessKey = parser.getText();
                        } else*/ if (text == 'erpBusinessKey') {
                            erpBusinessKey = parser.getText();
                        } else if (text == 'crmTechnicalKey') {
                            crmTechnicalKey = parser.getText();
                        } else if (text == 'productName') {
                            productName = parser.getText();
                        } else if (text == 'productType') {
                            productType = parser.getText();
                        } /*else if (text == 'productNameAndReportUri') {
                            productNameAndReportUri = parser.getText();
                        } else if (text == 'productSalesReportUri') {
                            productSalesReportUri = parser.getText();
                        }*/ else if (text == 'species') {
                            species = parser.getText();
                        } else if (text == 'productHierarchies') {
                            productHierarchies = new List<ProductHierarchies>();
                            while (parser.nextToken() != JSONToken.END_ARRAY) {
                                productHierarchies.add(new ProductHierarchies(parser));
                            }
                        } else {
                            System.debug(LoggingLevel.WARN, 'Product consuming unrecognized property: '+text);
                            //consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class ProductHierarchies {
        public String crmTechnicalKey {get;set;} 
        public String code {get;set;} 
        public String name {get;set;} 

        public ProductHierarchies(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'crmTechnicalKey') {
                            crmTechnicalKey = parser.getText();
                        } else if (text == 'code') {
                            code = parser.getText();
                        } else if (text == 'name') {
                            name = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'ProductHierarchies consuming unrecognized property: '+text);
                            //consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class SalesItems {
        //public String name {get;set;} 
        public String market {get;set;} 
        public String marketIsoCode {get;set;} 
        public String salesType {get;set;} 
        public String aggregationLevel {get;set;} 
        public String accountAggregationLevel {get;set;} 
        public Account account {get;set;} 
        public Product product {get;set;} 
        public String asOfDate {get;set;} 
        //public String territory {get;set;} 
        public List<SalesRecords> salesRecords {get;set;} 
        public TotalSalesRecord totalSalesRecord {get;set;} 

        public SalesItems(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        /*if (text == 'name') {
                            name = parser.getText();
                        } else*/ if (text == 'market') {
                            market = parser.getText();
                        } else if (text == 'marketIsoCode') {
                            marketIsoCode = parser.getText();
                        }else if (text == 'asOfDate') {
                            asOfDate = parser.getText();
                        } else if (text == 'salesType') {
                            salesType = parser.getText();
                        } else if (text == 'aggregationLevel') {
                            aggregationLevel = parser.getText();
                        } else if (text == 'accountAggregationLevel') {
                            accountAggregationLevel = parser.getText();
                        } else if (text == 'account') {
                            account = new Account(parser);
                        } else if (text == 'product') {
                            product = new Product(parser);
                        } /*else if (text == 'territory') {
                            territory = parser.getText();
                        }*/ else if (text == 'salesRecords') {
                            salesRecords = new List<SalesRecords>();
                            while (parser.nextToken() != JSONToken.END_ARRAY) {
                                salesRecords.add(new SalesRecords(parser));
                            }
                        } else if (text == 'totalSalesRecord') {
                            totalSalesRecord = new TotalSalesRecord(parser);
                        } else {
                            System.debug(LoggingLevel.WARN, 'SalesItems consuming unrecognized property: '+text);
                            //consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
   /* public static SalesDataRestClientHelperUS parse(String json) {
        return new SalesDataRestClientHelperUS(System.JSON.createParser(json));
    }*/
}